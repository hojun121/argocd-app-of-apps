{{- if .Values.provider.vsphere.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    control-plane: controller-manager
  name: capv-controller-manager
  namespace: capv-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-vsphere
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-vsphere
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --logtostderr
        - --v={{ .Values.provider.vsphere.verbose }}
        - --feature-gates=NodeAntiAffinity=false,NodeLabeling=false
        {{- if .Values.global.network.disabled }}
        image: "{{ .Values.global.network.registry }}/gcr.io/cluster-api-provider-vsphere/release/manager:v1.5.1"
        {{- else }}
        image: gcr.io/cluster-api-provider-vsphere/release/manager:v1.5.1
        {{- end }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /etc/capv
          name: manager-bootstrap-credentials
          readOnly: true
        {{- if ne .Values.global.timeZone "UTC" }}
        - name: timezone-config
          mountPath: /etc/localtime
        {{- end }}
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capv-webhook-service-cert
      - name: manager-bootstrap-credentials
        secret:
          secretName: capv-manager-bootstrap-credentials
      {{- if ne .Values.global.timeZone "UTC" }}
      - name: timezone-config
        hostPath:
          path: {{ printf "%s%s" "/usr/share/zoneinfo/" .Values.global.timeZone }}
      {{- end }}
{{- end -}}