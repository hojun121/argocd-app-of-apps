{{- if .Values.provider.aws.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    control-plane: capa-controller-manager
  name: capa-controller-manager
  namespace: capa-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-aws
      control-plane: capa-controller-manager
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: ""
      labels:
        cluster.x-k8s.io/provider: infrastructure-aws
        control-plane: capa-controller-manager
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            weight: 10
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            weight: 10
      containers:
      - args:
        - --leader-elect
        - --feature-gates=EKS=true,EKSEnableIAM=false,EKSAllowAddRoles=false,EKSFargate=false,MachinePool=false,EventBridgeInstanceState=false,AutoControllerIdentityCreator=true,BootstrapFormatIgnition=false,ExternalResourceGC=false
        - --metrics-bind-addr=127.0.0.1:8080
        - --v={{ .Values.provider.aws.verbose }}
        env:
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /home/.aws/credentials
        {{- if .Values.global.network.disabled }}
        image: "{{ .Values.global.network.registry }}/registry.k8s.io/cluster-api-aws/cluster-api-aws-controller:v2.0.2"
        {{- else }}
        image: registry.k8s.io/cluster-api-aws/cluster-api-aws-controller:v2.0.2
        {{- end }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /home/.aws
          name: credentials
        {{- if ne .Values.global.timeZone "UTC" }}
        - name: timezone-config
          mountPath: /etc/localtime
        {{- end }}
      securityContext:
        fsGroup: 1000
      serviceAccountName: capa-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capa-webhook-service-cert
      - name: credentials
        secret:
          secretName: capa-manager-bootstrap-credentials
    {{- if ne .Values.global.timeZone "UTC" }}
      - name: timezone-config
        hostPath:
          path: {{ printf "%s%s" "/usr/share/zoneinfo/" .Values.global.timeZone }}
    {{- end }}
{{- end -}}
